<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2018-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAxOC0xMS0wMQ=="/>
  <commandGroup name="network vnet peering">
    <command name="show" version="2018-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2018-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAxOC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess"/>
                    <prop type="string" name="peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="object" name="remoteAddressSpace">
                      <prop type="array<string>" name="addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="boolean" name="useRemoteGateways"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2018-11-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2018-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAxOC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2018-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2018-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAxOC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic" options="allow-forwarded-traffic" group="Properties">
          <help short="Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."/>
        </arg>
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit" options="allow-gateway-transit" group="Properties">
          <help short="If gateway links can be used in remote virtual networking to link to this virtual network."/>
        </arg>
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess" options="allow-virtual-network-access" group="Properties">
          <help short="Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."/>
        </arg>
        <arg type="string" var="$VirtualNetworkPeeringParameters.properties.peeringState" options="peering-state" group="Properties">
          <help short="The status of the virtual network peering."/>
          <enum>
            <item name="Connected" value="&quot;Connected&quot;"/>
            <item name="Disconnected" value="&quot;Disconnected&quot;"/>
            <item name="Initiated" value="&quot;Initiated&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$VirtualNetworkPeeringParameters.properties.provisioningState" options="provisioning-state" group="Properties">
          <help short="The provisioning state of the resource."/>
        </arg>
        <arg type="object" var="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace" options="remote-address-space" group="Properties">
          <help short="The reference to the address space peered with the remote virtual network."/>
          <arg type="array<string>" var="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace.addressPrefixes" options="address-prefixes">
            <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork" options="remote-virtual-network" group="Properties">
          <help short="The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering)."/>
          <arg type="string" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg type="boolean" var="$VirtualNetworkPeeringParameters.properties.useRemoteGateways" options="use-remote-gateways" group="Properties">
          <help short="If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."/>
        </arg>
      </argGroup>
      <argGroup name="VirtualNetworkPeeringParameters">
        <arg type="string" var="$VirtualNetworkPeeringParameters.etag" options="etag" group="VirtualNetworkPeeringParameters">
          <help short="A unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg type="ResourceId" var="$VirtualNetworkPeeringParameters.id" options="id" hide="True" group="VirtualNetworkPeeringParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="VirtualNetworkPeeringParameters" required="True" clientFlatten="True">
                  <prop type="string" name="etag" arg="$VirtualNetworkPeeringParameters.etag"/>
                  <prop type="ResourceId" name="id" arg="$VirtualNetworkPeeringParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$Path.virtualNetworkPeeringName"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic" arg="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit" arg="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess" arg="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess"/>
                    <prop type="string" name="peeringState" arg="$VirtualNetworkPeeringParameters.properties.peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$VirtualNetworkPeeringParameters.properties.provisioningState"/>
                    <prop type="object" name="remoteAddressSpace" arg="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace">
                      <prop type="array<string>" name="addressPrefixes" arg="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace.addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork">
                      <prop type="string" name="id" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id"/>
                    </prop>
                    <prop type="boolean" name="useRemoteGateways" arg="$VirtualNetworkPeeringParameters.properties.useRemoteGateways"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess"/>
                    <prop type="string" name="peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="object" name="remoteAddressSpace">
                      <prop type="array<string>" name="addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="boolean" name="useRemoteGateways"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworks/{}/virtualnetworkpeerings/{}" version="2018-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya3Mve3ZpcnR1YWxOZXR3b3JrTmFtZX0vdmlydHVhbE5ldHdvcmtQZWVyaW5ncy97dmlydHVhbE5ldHdvcmtQZWVyaW5nTmFtZX0=/V/MjAxOC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualNetworkName" options="vnet-name" required="True" idPart="name">
          <help short="The virtual network (VNet) name."/>
        </arg>
        <arg type="string" var="$Path.virtualNetworkPeeringName" options="name n" required="True" idPart="child_name_1">
          <help short="The name of the VNet peering."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic" options="allow-forwarded-traffic" group="Properties">
          <help short="Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."/>
        </arg>
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit" options="allow-gateway-transit" group="Properties">
          <help short="If gateway links can be used in remote virtual networking to link to this virtual network."/>
        </arg>
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess" options="allow-virtual-network-access" group="Properties">
          <help short="Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."/>
        </arg>
        <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.properties.peeringState" options="peering-state" group="Properties">
          <help short="The status of the virtual network peering."/>
          <enum>
            <item name="Connected" value="&quot;Connected&quot;"/>
            <item name="Disconnected" value="&quot;Disconnected&quot;"/>
            <item name="Initiated" value="&quot;Initiated&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.properties.provisioningState" options="provisioning-state" group="Properties">
          <help short="The provisioning state of the resource."/>
        </arg>
        <arg nullable="True" type="object" var="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace" options="remote-address-space" group="Properties">
          <help short="The reference to the address space peered with the remote virtual network."/>
          <arg nullable="True" type="array<string>" var="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace.addressPrefixes" options="address-prefixes">
            <help short="A list of address blocks reserved for this virtual network in CIDR notation."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork" options="remote-virtual-network" group="Properties">
          <help short="The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering)."/>
          <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="boolean" var="$VirtualNetworkPeeringParameters.properties.useRemoteGateways" options="use-remote-gateways" group="Properties">
          <help short="If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."/>
        </arg>
      </argGroup>
      <argGroup name="VirtualNetworkPeeringParameters">
        <arg nullable="True" type="string" var="$VirtualNetworkPeeringParameters.etag" options="etag" group="VirtualNetworkPeeringParameters">
          <help short="A unique read-only string that changes whenever the resource is updated."/>
        </arg>
        <arg nullable="True" type="ResourceId" var="$VirtualNetworkPeeringParameters.id" options="id" hide="True" group="VirtualNetworkPeeringParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkPeerings_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualNetworkPeering_read">
                  <prop type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowForwardedTraffic"/>
                    <prop type="boolean" name="allowGatewayTransit"/>
                    <prop type="boolean" name="allowVirtualNetworkAccess"/>
                    <prop type="string" name="peeringState">
                      <enum>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Initiated&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState"/>
                    <prop type="object" name="remoteAddressSpace">
                      <prop type="array<string>" name="addressPrefixes">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="boolean" name="useRemoteGateways"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="VirtualNetworkPeeringParameters" required="True" clientFlatten="True">
              <prop type="string" name="etag" arg="$VirtualNetworkPeeringParameters.etag"/>
              <prop type="ResourceId" name="id" arg="$VirtualNetworkPeeringParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/virtualNetworkPeerings/{}"/>
              </prop>
              <prop type="string" name="name" arg="$Path.virtualNetworkPeeringName"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="allowForwardedTraffic" arg="$VirtualNetworkPeeringParameters.properties.allowForwardedTraffic"/>
                <prop type="boolean" name="allowGatewayTransit" arg="$VirtualNetworkPeeringParameters.properties.allowGatewayTransit"/>
                <prop type="boolean" name="allowVirtualNetworkAccess" arg="$VirtualNetworkPeeringParameters.properties.allowVirtualNetworkAccess"/>
                <prop type="string" name="peeringState" arg="$VirtualNetworkPeeringParameters.properties.peeringState">
                  <enum>
                    <item value="&quot;Connected&quot;"/>
                    <item value="&quot;Disconnected&quot;"/>
                    <item value="&quot;Initiated&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="provisioningState" arg="$VirtualNetworkPeeringParameters.properties.provisioningState"/>
                <prop type="object" name="remoteAddressSpace" arg="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace">
                  <prop type="array<string>" name="addressPrefixes" arg="$VirtualNetworkPeeringParameters.properties.remoteAddressSpace.addressPrefixes">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="remoteVirtualNetwork" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork">
                  <prop type="string" name="id" arg="$VirtualNetworkPeeringParameters.properties.remoteVirtualNetwork.id"/>
                </prop>
                <prop type="boolean" name="useRemoteGateways" arg="$VirtualNetworkPeeringParameters.properties.useRemoteGateways"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualNetworkPeerings_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualNetworkName" arg="$Path.virtualNetworkName" required="True"/>
              <param type="string" name="virtualNetworkPeeringName" arg="$Path.virtualNetworkPeeringName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualNetworkPeering_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
